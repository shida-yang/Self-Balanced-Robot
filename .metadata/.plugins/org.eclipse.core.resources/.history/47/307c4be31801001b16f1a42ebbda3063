#include "MPU6050.h"


static void I2C_Master_Init(){

    InitI2CGpio();

    I2C_setSlaveAddress(I2CA_BASE, MPU6050_SLAVE_ADDR);

    I2C_enableModule(I2CA_BASE);


}

static void I2C_SendBytes(Uint16 * const values, Uint16 length){

}

static void InitI2CGpio(){
    EALLOW;

    GpioCtrlRegs.GPDDIR.bit.GPIO105 = 1;
    GpioDataRegs.GPDCLEAR.bit.GPIO105 = 1;
    int i;
    for(i=0; i<10; i++){
        GpioDataRegs.GPDSET.bit.GPIO105 = 1;
        DELAY_US(1000);
        GpioDataRegs.GPDCLEAR.bit.GPIO105 = 1;
        DELAY_US(1000);
    }

    GpioCtrlRegs.GPDPUD.bit.GPIO104 = 0;    // Enable pull-up for GPIO104 (SDAA)
    GpioCtrlRegs.GPDPUD.bit.GPIO105 = 0;       // Enable pull-up for GPIO105 (SCLA)

    GpioCtrlRegs.GPDQSEL1.bit.GPIO104 = 3;  // Asynch input GPIO104 (SDAA)
    GpioCtrlRegs.GPDQSEL1.bit.GPIO105 = 3;  // Asynch input GPIO105 (SCLA)

    GpioCtrlRegs.GPDGMUX1.bit.GPIO104 = 0;   // Configure GPIO104 for SDAA operation
    GpioCtrlRegs.GPDGMUX1.bit.GPIO105 = 0;   // Configure GPIO105 for SCLA operation
    GpioCtrlRegs.GPDMUX1.bit.GPIO104 = 1;
    GpioCtrlRegs.GPDMUX1.bit.GPIO105 = 1;

}
